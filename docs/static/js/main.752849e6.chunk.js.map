{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,oCACI,2CACA,0BAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,MAAG,CAAEP,MACvBC,EAAc,OASV,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAvBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,uBCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,mGAEqFC,UAAUH,IAF/F,SAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECLwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAhBAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAO1B,CAACpB,IAGGqB,EDnBuBK,CAAa1B,GAA/Ba,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QASpB,OACI,oCACA,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,YACZ,yBAAKA,UAAU,aAENH,EAAOJ,KAAI,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACLD,UEiBTkB,EApCM,WAGjB,MAAoC1C,mBAAS,CAAC,YAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KASA,OACI,oCACA,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAGA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACA2B,IAAK3B,EACLA,SAAWA,U,MCxB/B8B,IAASC,OAEP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.752849e6.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n    const handleInputChange = (e)=> {\n\n        setInputValue(e.target.value)\n        \n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault(); //prevenir la recarga de la página porr defecto\n        // console.log('submit')\n        if(inputValue.trim().length > 2) {\n            setCategories(cats =>[ inputValue]); // ...cats, --> para mantener lo que está en el arreglo\n            setInputValue('');\n        }\n        \n\n    }\n    return (\n        <>\n            <h2>AddCategory</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value= {inputValue}\n                    onChange= {handleInputChange}\n\n                />\n            </form>\n            \n        </>\n    )\n}\n\nAddCategory.propTypes={\n    setCategories: PropTypes.func.isRequired,\n\n}\n\n\n","\n\nexport const getGifs = async (category)=>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=0RcoBzpBe3jxMd0PynxANNukSC8rfMg3&limit=10&q=${encodeURI(category)}`\n    const respuesta= await fetch(url);\n    const {data} = await respuesta.json();\n\n    const gifs = data.map(img => { \n\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    })\n\n    // console.log(gifs);\n    return gifs;\n}   ","import React from 'react'\n\n\nexport const GifGridItem = ({title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React, {} from 'react'\n// import { getGifs } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    // const [images, setImages] = useState([]);\n    const {data:images, loading}= useFetchGifs(category);\n\n    // useEffect(() => {\n    //     getGifs(category)\n    //         .then(imgs => setImages(imgs))\n    // }, [category])\n\n   \n   \n    return (\n        <>\n        <h3 className=\"animate__animated animate__bounce\">{category}</h3>\n        {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\n        <div className=\"card-grid\">\n            \n                {images.map(img => \n                    <GifGridItem \n                    key={img.id}\n                    {...img}/>\n                    \n                    )}\n           \n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGifs = (category) =>{\n\n    const [state, setState] = useState({\n        data:[],\n        loading: true,\n\n    })\n\n    useEffect( ()=>{\n\n        getGifs(category)\n            .then(imgs=>{\n                    setState({\n                        data:imgs,\n                        loading: false,\n    \n                    })\n               \n            })\n\n\n    }, [category])\n\n    \n    return state; // {data:[], loading: true}\n}","\nimport React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\n\nconst GifExpertApp = () => {\n\n    \n    const [categories, setCategories] = useState(['welcome']);\n\n    // const handleAdd = ()=>{\n    //     // 'Anime'\n    //     setCategories([...categories, 'anime'])\n    //     // setCategories(cats =>[ ...cats, 'anime'])\n    // }\n\n\n    return (\n        <>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={ setCategories }/>\n        <hr/>\n       \n\n        <ol>\n            {\n                categories.map(category => \n                    <GifGrid \n                    key={category}\n                    category= {category}/>\n                ) \n            }\n\n        </ol>\n\n        </>\n    )\n\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}